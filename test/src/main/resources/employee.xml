<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context-3.1.xsd
                    http://www.springframework.org/schema/cache
                    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd "
       default-lazy-init="true">
   <context:component-scan base-package="com.test.dao,com.test.service,com.test.controller"></context:component-scan>
 <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--获得数据源-->
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       <property name="url" value="${jdbc_url}"></property>
       <property name="username" value="${jdbc_user}"></property>
       <property name="password" value="${jdbc_password}"></property>
       <property name="driverClassName" value="${jdbc_driver}"></property>
   </bean>

    <!--获得mybaits工厂 -->
    <bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入的数据源-->
    <property name="dataSource" ref="dataSource"></property>
        <!--注入mapper配置-->
    <property name="mapperLocations" value="classpath:com/test/dao/*Mapper.xml"></property>
        <!--别名-->
        <property name="typeAliasesPackage" value="com.test.entity.EmployeeEntity"></property>
    </bean>

    <!--mapperd绑定接口-->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入工厂bean-->
       <property name="sqlSessionFactoryBeanName" value="factoryBean"></property>
       <!--绑定接口。绑定接口的形式，批量的绑定接口-->
       <property name="basePackage" value="com.test.dao.IEmpDao"></property>
   </bean>
    <!--事务配置-->

    <!--事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--事务通知-->
     <tx:advice id="mybaitsAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="find*" read-only="true"/>
                <tx:method name="*" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED" ></tx:method>
            </tx:attributes>
     </tx:advice>
<!--AOP-->
    <!--<aop:config>
           &lt;!&ndash;增强通知&ndash;&gt;
          <aop:advisor advice-ref="mybaitsAdvice" pointcut="execution( * com.lovo.spring.*.IUserCrudService.*(..)) "></aop:advisor>
    </aop:config>-->



  <!--<bean id="myAspect" class="com.lovo.spring.aop.MyAspect"></bean>-->

    <!--<aop:config>-->
        <!--<aop:aspect id="aop" ref="myAspect">-->
               <!--&lt;!&ndash;<aop:before method="beforeMessage"&ndash;&gt;-->
                           <!--&lt;!&ndash;pointcut="execution( * com.lovo.spring.*.IUserCrudService.*(..) )"></aop:before>&ndash;&gt;-->
            <!--<aop:around method="aroundMessage" pointcut="execution( * com.lovo.spring.*.IUserCrudService.*(..) )"></aop:around>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->
    <!--注解AOP开启自动代理
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>-->
</beans>